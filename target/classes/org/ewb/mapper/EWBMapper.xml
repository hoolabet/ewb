<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.ewb.mapper.EWBMapper">
	<select id="ewbLogin" resultType="org.ewb.model.MemberVO">
		SELECT * FROM ewb_member WHERE id=#{id} and pw=#{pw}
	</select>
	
	<insert id="ewbSignUp">
		INSERT INTO ewb_member(id,pw,name)
		VALUES(#{id},#{pw},#{name})
	</insert>
	
	<insert id="saveContent">
		INSERT INTO 
		${type}
		<choose>
		<when test="type == 'home_page'">
		(id,url,content,opt)
		</when>
		<otherwise>
		(url,content)
		</otherwise>
		</choose>
		VALUES
		<choose>
		<when test="type == 'home_page'">
		(#{id},#{url},#{content},#{opt})
		</when>
		<otherwise>
		(#{url},#{content})
		</otherwise>
		</choose>
	</insert>
	
	<update id="modifyContent">
		UPDATE ${type}
		SET	content = #{content}
		WHERE url = #{url}
	</update>
	
	<delete id="deleteContent">
		DELETE FROM ${type} WHERE url = #{url}
	</delete>
	
	<select id="loadContent" resultType="org.ewb.model.ContentVO">
		SELECT * FROM ${type} WHERE url = #{url}
	</select>
	
	<select id="getPage" resultType="org.ewb.model.ContentVO">
		SELECT * FROM home_page WHERE id=#{id} ORDER BY create_date desc
	</select>
	
	<insert id="createTable" parameterType="java.lang.String">
		${value}
	</insert>
	
	<insert id="createFirstAccount" >
		INSERT INTO member_${id} (id,pw,admin)
		VALUES (#{id},#{pw},true)
	</insert>
	
	<update id="dropTable" parameterType="java.lang.String">
		drop table IF EXISTS ${value}
	</update>
	
	<select id="dupCheck" resultType="org.ewb.model.MemberVO">
		SELECT * FROM member_${url} WHERE id=#{id}
	</select>
	
	<insert id="signUp" >
		INSERT INTO member_${url} (id,pw,name,phone,email,birth)
		VALUES (#{id},#{pw},#{name},#{phone},#{email},#{birth})
	</insert>
	
	<select id="login" resultType="org.ewb.model.MemberVO">
		SELECT * FROM member_${url} WHERE id=#{id} and pw=#{pw}
	</select>
	
	<select id="productList" resultType="org.ewb.model.ProductVO">
  		SELECT
			*
		FROM(
			SELECT 
				*, 
				ROW_NUMBER() OVER(ORDER BY pno DESC) as num
			FROM 
				product_${array}
				<if test = "search != ''.toString">
				<choose>
					<when test="type == 't'.toString()">
					WHERE
						pname LIKE CONCAT('%', #{search}, '%')
					</when>
					<when test="type == 'c'.toString()">
					WHERE
						content LIKE CONCAT('%', #{search}, '%')
					</when>
					<when test="type == 'tc'.toString()">
					WHERE
						pname LIKE CONCAT('%', #{search}, '%')
					OR
						content LIKE CONCAT('%', #{search}, '%')
					</when>
				</choose>
			</if>
    		ORDER BY
				pno DESC
		) add_rn_board
		<![CDATA[
		WHERE
			num > (#{pageNum} - 1)*#{amount} and num <= #{pageNum}*#{amount}
		]]>
  	</select>
  	
  	<select id="productMaxNumSearch" resultType="int">
		SELECT
			ifnull(MAX(num),1)
		FROM(
			SELECT 
				*, 
				ROW_NUMBER() OVER(ORDER BY pno DESC) as num
			FROM 
				product_${array}
			<if test = "search != ''.toString">
				<choose>
					<when test="type == 't'.toString()">
					WHERE
						pname LIKE CONCAT('%', #{search}, '%')
					</when>
					<when test="type == 'c'.toString()">
					WHERE
						content LIKE CONCAT('%', #{search}, '%')
					</when>
					<when test="type == 'tc'.toString()">
					WHERE
						pname LIKE CONCAT('%', #{search}, '%')
					OR
						content LIKE CONCAT('%', #{search}, '%')
					</when>
				</choose>
			</if>
    		ORDER BY
				pno DESC
		) add_rn_board
	</select>
</mapper>