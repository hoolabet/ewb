<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.ewb.mapper.UserMapper">
	<select id="memberList" parameterType="java.lang.String" resultType="org.ewb.model.MemberVO">
		SELECT
		*
		FROM(
		SELECT
		*,
		ROW_NUMBER() OVER(ORDER BY sign_date)
		as num
		FROM
		member_${url} 
		WHERE
		admin = false
		<if test="search != ''.toString">
			<choose>
				<when test="type == 't'.toString()">
					AND
					id LIKE CONCAT('%', #{search}, '%')
				</when>
				<when test="type == 'c'.toString()">
					AND
					name LIKE CONCAT('%', #{search}, '%')
				</when>
				<when test="type == 'tc'.toString()">
					AND
					(
					id LIKE CONCAT('%', #{search}, '%')
					OR
					name LIKE CONCAT('%', #{search}, '%')
					)
				</when>
			</choose>
		</if>
		ORDER BY
		sign_date DESC
		) add_rn_board
		<![CDATA[
		WHERE
			num > (#{pageNum} - 1)*#{amount} and num <= #{pageNum}*#{amount}
		]]>
	</select>
	
	<select id="memberMaxNumSearch" resultType="int">
		SELECT
		ifnull(MAX(num),1)
		FROM(
		SELECT
		*,
		ROW_NUMBER() OVER(ORDER BY sign_date
		)
		as num
		FROM
		member_${url}
		WHERE
		admin = false
		<if test="search != ''.toString">
			<choose>
				<when test="type == 't'.toString()">
					AND
					id LIKE CONCAT('%', #{search}, '%')
				</when>
				<when test="type == 'c'.toString()">
					AND
					name LIKE CONCAT('%', #{search}, '%')
				</when>
				<when test="type == 'tc'.toString()">
					AND
					(
					id LIKE CONCAT('%', #{search}, '%')
					OR
					name LIKE CONCAT('%', #{search}, '%')
					)
				</when>
			</choose>
		</if>
		ORDER BY
		sign_date DESC
		) add_rn_board
		
	</select>
	
	<delete id="banUser">
		DELETE FROM member_${url} WHERE id=#{id}
	</delete>
	
	<select id="dupCheck" resultType="org.ewb.model.MemberVO">
		SELECT * FROM member_${url}
		WHERE id=#{id}
	</select>

	<insert id="signUp">
		INSERT INTO member_${url}
		(id,pw,name,phone,email,birth)
		VALUES
		(#{id},#{pw},#{name},#{phone},#{email},#{birth})
	</insert>

	<select id="login" resultType="org.ewb.model.MemberVO">
		SELECT * FROM member_${url} WHERE
		id=#{id} and pw=#{pw}
	</select>
	
	<insert id="insertReg">
		INSERT INTO signup_reg(url,content)
		VALUES(#{url},#{content})
	</insert>
	
	<update id="updateReg">
		UPDATE signup_reg
		SET content=#{content}
		WHERE url=#{url}
	</update>
	
	<select id="loadReg" resultType="org.ewb.model.ContentVO">
		SELECT * FROM signup_reg WHERE url=#{url}
	</select>
	
	<insert id="insertDes">
		INSERT INTO destination_${url}(id,label,name,address,phone,memo)
		VALUES(#{id},#{label},#{name},#{address},#{phone},#{memo})
	</insert>
	
	<update id="updateDes">
		UPDATE destination_${url}
		SET label=#{label},name=#{name},address=#{address},phone=#{phone},memo=#{memo}
		WHERE id=#{id}
	</update>
	
	<delete id="deleteDes">
		DELETE FROM destination_${url} WHERE id=#{id} and label=#{label}
	</delete>
	
	<select id="loadDes" resultType="org.ewb.model.DestinationVO">
		SELECT * FROM destination_${url} 
		WHERE id=#{id}
	</select>
	
	<select id="loadDes1" resultType="org.ewb.model.DestinationVO">
		SELECT * FROM destination_${url} 
		WHERE id=#{id} and label=#{label}
	</select>
	
	<select id="loadUserInfo" resultType="org.ewb.model.MemberVO">
		SELECT * FROM member_${url} WHERE id=#{id}
	</select>
	
	<update id="modifyProfile">
		UPDATE member_${url}
		SET ${name}=#{sign_date}
		WHERE id=#{id}
	</update>
	
	<update id="updateStatus">
		UPDATE member_${url}
		SET status = #{status}
		WHERE id=#{id}
	</update>
	
</mapper>